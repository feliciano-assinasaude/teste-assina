@charset "UTF-8";

$mq-breakpoints: (
  phone: 150px,
  tablet-portrait: 590px,
  tablet-landscape: 900px,
  desktop: 1200px,
  stable: 1500px,
) !default;

$mq-base-font-size: 14px !default;
$mq-media-type: all !default;
$mq-responsive: true !default;
$mq-static-breakpoint: desktop !default;

@function mq-px2em($px, $base-font-size: $mq-base-font-size) {
  @if ($mq-base-font-size != 16px) {
    @warn "Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.";
  }
  @if ($base-font-size != 16px) {
    @warn "The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.";
  }
  @if unitless($px) {
    @warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels.";
    @return mq-px2em($px * 1px, $base-font-size);
  } @else if unit($px) == em {
    @return $px;
  }
  @return ($px / $base-font-size) * 1em;
}

@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {
  @if map-has-key($breakpoints, $name) {
    @return map-get($breakpoints, $name);
  } @else {
    @warn "Breakpoint #{$name} wasn't found in $breakpoints.";
    @return "";
  }
}

@mixin mq(
  $from: false,
  $until: false,
  $media-type: $mq-media-type,
  $breakpoints: $mq-breakpoints
) {
  $min-width: 0;
  $max-width: 0;
  $media-query: "";

  // From: this breakpoint (inclusive)
  @if $from {
    $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));
  }

  // Until: that breakpoint (exclusive)
  @if $until {
    $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) -
      0.01em;
  }

  @if $min-width != 0 {
    $media-query: "#{$media-query} and (min-width: #{$min-width})";
  }
  @if $max-width != 0 {
    $media-query: "#{$media-query} and (max-width: #{$max-width})";
  }

  @media #{$media-type + $media-query} {
    @content;
  }
}
